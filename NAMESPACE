export(area, calibration_metrics, calibration_plot, cumuplot, coef, compare_jm,
       crisk_setup, rc_setup, densplot, family, fixef, gelman_diag,
       ggdensityplot, ggtraceplot, jm, model.frame, model.matrix, ranef, slope,
       terms, traceplot, tv, tvAUC, tvBrier, tvEPCE, tvROC, value, vexpit,
       Dexpit, vexp, vabs, Dexp, vlog, vlog2, vlog10, vsqrt, poly2, poly3, poly4,
       velocity, acceleration, coefs, create_folds, variogram, ppcheck)

import(Rcpp)
importFrom("utils", "glob2rx", "tail", "head", "combn")
importFrom("stats", "coef", "terms", "model.frame", "model.frame.default",
           "model.matrix", "model.matrix.default", "model.weights", "family",
           "lm.fit", "sd", "ar", "var", "vcov", "optim", "delete.response",
           "model.response", "rnorm", "quantile", "runif", "rlnorm", "cov2cor",
           "as.formula", "gaussian", ".getXlevels", "makepredictcall", "plogis",
           "reformulate", "predict", "pnorm", "ave", "median", "density",
           "simulate", "rbinom", "rpois", "rt", "rbeta", "ecdf", "rnbinom",
           "loess.smooth", "smooth.spline", "loess", "qt", "rgamma")
importFrom("parallel", "makeCluster", "stopCluster", "detectCores", "parLapply",
           "clusterSetRNGStream", "makePSOCKcluster", "mclapply")
importFrom("parallelly", "availableCores")
importFrom("nlme", "fixef", "ranef", "pdMatrix")
importFrom("GLMMadaptive", "effectPlotData")
importFrom("survival", "coxph", "untangle.specials", "strata", "survfit", "Surv")
importFrom("splines", "splineDesign", "ns")
importFrom("coda", "as.mcmc.list", "as.mcmc", "traceplot", "densplot",
           "gelman.diag", "cumuplot")
importFrom("ggplot2", "ggplot", "geom_density", "aes", "ggtitle", "theme_bw",
           "theme", "element_text", "scale_color_manual", "scale_fill_manual",
           "guide_legend", "geom_line", "guides")
importFrom("gridExtra", "marrangeGrob")
importFrom("matrixStats", "rowQuantiles", "colVars", "colLogSumExps",
           "colCumsums")
importFrom("abind", "abind")
importFrom("MASS", "mvrnorm")
importFrom("graphics", "abline", "axis", "box", "lines", "mtext", "par",
           "polygon", "title", "plot", "points", "legend", "matplot", "text")

useDynLib(JMbayes2, .registration = TRUE)

S3method(traceplot, jm)
S3method(gelman_diag, jm)
S3method(densplot, jm)
S3method(cumuplot, jm)
S3method(ggtraceplot, jm)
S3method(ggdensityplot, jm)
S3method(print, jm)
S3method(summary, jm)
S3method(print, summary.jm)
S3method(coef, jm)
S3method(fixef, jm)
S3method(ranef, jm)
S3method(terms, jm)
S3method(makepredictcall, tv)
S3method(model.frame, jm)
S3method(model.matrix, jm)
S3method(family, jm)
S3method(effectPlotData, jm)
S3method(print, compare_jm)
S3method(plot, predict_jm)
S3method(tvAUC, jm)
S3method(tvAUC, coxph)
S3method(tvAUC, tvROC)
S3method(tvBrier, jm)
S3method(tvBrier, jmList)
S3method(tvBrier, list)
S3method(tvBrier, coxph)
S3method(calibration_plot, coxph)
S3method(calibration_plot, jm)
S3method(tvROC, jm)
S3method(tvROC, coxph)
S3method(simulate, jm)
S3method(print, tvROC)
S3method(plot, tvROC)
S3method(plot, vrgm)
S3method(print, tvAUC)
S3method(print, tvBrier)
S3method(print, tvEPCE)
S3method(predict, jm)
S3method(predict, jmList)





